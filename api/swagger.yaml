openapi: 3.0.1

info:
  version: 1.0.0
  title: sayhi web service
  description: A polite web service that always says hello
  contact:
    email: marco.micera+sayhi@gmail.com
    name: Marco Micera
    url: https://marcomicera.github.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - description: localhost machine for testing purposes (at default port)
    url: http://localhost:8080
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/marcomicera/sayhi/1.0

tags:
  - name: users
    description: Operations available to regular users

paths:
  /helloworld:
    get:
      tags:
        - users
      summary: says hi
      operationId: sayHi
      description: Says hi either to a known person or to a stranger
      parameters:
        - $ref: '#/components/parameters/PersonNameParameter'
      responses:
        "200":
          description: Service says hi
          content:
            appl  ication/json:
              schema:
                $ref: '#/components/schemas/Salutation'
        "400":
          $ref: '#/components/responses/InvalidPersonName'
        "500":
          $ref: '#/components/responses/SalutationInternalServerError'
  /versionz:
    get:
      tags:
        - users
      summary: returns project info
      operationId: getProjectInfo
      description: Returns a the git hash and name of the project
      responses:
        '200':
          description: Project information found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfo'
        "400":
          $ref: '#/components/responses/InvalidPersonName'
        "500":
          $ref: '#/components/responses/ProjectInfoInternalServerError'

components:
  schemas:
    Salutation:
      description: A gesture or utterance made as a greeting or acknowledgement of another's arrival or departure
      type: string
      minLength: 7 # len('Hello X'), a name must have at least 1 character
      pattern: "^Hello [a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
      example: Hello Stranger
    PersonName:
      description: A word or set of words by which a person or thing is known, addressed, or referred to
      type: string
      minLength: 1
      pattern: "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
      example: AlfredENeumann
    ProjectInfo:
      description: Project information, including the git hash and the name of the project
      type: object
      required:
        - gitHash
        - projectName
      properties:
        gitHash:
          $ref: '#/components/schemas/GitHash'
        projectName:
          $ref: '#/components/schemas/ProjectName'
    GitHash:
      description: 'The git project SHA-1 hash'
      type: string
      minLength: 5
      pattern: "\b[0-9a-f]{5,40}\b"
      example: 418c1f073782a1c855890971ff18794f7a298f6d
    ProjectName:
      description: Name of this project
      type: string
      minLength: 1
      pattern: "^[a-zA-Z0-9_.-]+$"
      example: 'sayhi'
  parameters:
    PersonNameParameter:
      name: name
      in: query
      required: false
      description: The person who needs to be addressed
      schema:
        $ref: '#/components/schemas/PersonName'
  responses:
    InvalidPersonName:
      description: Person name is invalid
    ProjectInfoInternalServerError:
      description: An error occurred while retrieving this project's info
    SalutationInternalServerError:
      description: The server tried to say hi, but an error occurred. Please do not take it personally.
